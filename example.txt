Предполагается, что входные данные корректные 

Входные данные: список из вершин мультиграфа, вершина (T1 T2 A3 A4) - где 
T1 - первая вершина, T2 - вторая вершина, 
A3 - тип дороги между T1 и T2 (1 - автомобильная, 2 - ж/д дорога, никаких других типов нет (хотя для алгоритма это неважно)), 
A4 - длина пути между T1 и T2 

Алгоритм работы программы:
1. Составляется список всех городов TL
2. По входным данным строится удобная для реализации алгоритма матрица, элемент которой является список доступных вершин 
(номер элемента совпадает с номером города в списке городов TL)
3. Построенную матрицу обрабатывает алгоритм поиска в глубину (dfs). Находятся все возможные пути T1 -> T2 
4. Если такие пути существуют, то находится минимальный путь
   Если нет, то предлагается первый возможный путь из матрицы пункта 2
5. Выводятся пути с минимальной длинной
6. Составляется список путей с длинной < 1.5 * минимальный путь
7. Он сортируется по длине пути с помощью встроенной функцией sort (с операцией <=, по первому значению элемента)
8. Печатаютс все пути, длина которых совпадает с минимальным количеством пересадок

Пример №1 - самый простой
На вход граф: ((A B 1 5) (A D 1 10) (A C 1 4) (B C 1 7))
Найти путь: А -> B

Список городов TL: 
(C D B A) 
Заполненная матрица: 
(((3 1 7) (4 1 4)) ((4 1 10)) ((1 1 7) (4 1 5)) ((1 1 4) (2 1 10) (3 1 5))) 
Найденные всевозможные пути A -> B: 
((5 0 (A B) (1)) (11 0 (A C B) (1 1))) 
где 1зн - длина пути, 2зн - количество пересадок, 3зн - список-маршрут, 4зн - список пересадок

Ответ:
Минимальные по длине пути: 
(5 0 (A B) (1)) 
Пути с минимальным числом пересадок, длина которых < 1.5 * minRoute: 
(5 0 (A B) (1)) 

Пример №2 - существует нескольно типов дорог

На вход граф: ((A B 1 5) (A D 1 3) (A C 1 4) (B C 1 7) (B D 2 2))
Найти путь: А -> B

"Список городов TL:" 
(C D B A) 
"Заполненная матрица:" 
(((3 1 7) (4 1 4)) ((3 2 2) (4 1 3)) ((2 2 2) (1 1 7) (4 1 5)) ((1 1 4) (2 1 3) (3 1 5))) 
"Найденные всевозможные пути T1 -> T2:" 
((5 0 (A B) (1)) (5 1 (A D B) (1 2)) (11 0 (A C B) (1 1))) 

Ответ:

"Минимальные по длине пути:" 
(5 0 (A B) (1)) 
(5 1 (A D B) (1 2)) 
"Пути с минимальным числом пересадок, длина которых < 1.5 * minRoute:" 
(5 0 (A B) (1))

Пример №3 - существует 2 ответа с минимальным числом пересадок
На вход граф: ((A B 1 10) (A D 1 3) (A C 1 4) (B C 1 7) (B D 2 8))
Найти путь: А -> B

"Список городов TL:" 
(C D B A) 
"Заполненная матрица:" 
(((3 1 7) (4 1 4)) ((3 2 8) (4 1 3)) ((2 2 8) (1 1 7) (4 1 10))((1 1 4) (2 1 3) (3 1 10))) 
"Найденные всевозможные пути T1 -> T2:" 
((10 0 (A B) (1)) (11 1 (A D B) (1 2)) (11 0 (A C B) (1 1))) 

"Ответ:" 

"Минимальные по длине пути:" 
(10 0 (A B) (1)) 
"Пути с минимальным числом пересадок, длина которых < 1.5 * minRoute:" 
(10 0 (A B) (1)) 
(11 0 (A C B) (1 1)) 

Пример №4 - пути T1 -> T2 не существует

На вход граф: ((A B 1 5) (A C 1 4) (B C 1 7) (F D 1 5))
Найти путь: А -> F

"Список городов TL:" 
(D F C B A) 
"Заполненная матрица:" 
(((2 1 5)) ((1 1 5)) ((4 1 7) (5 1 4)) ((3 1 7) (5 1 5)) ((3 1 4) (4 1 5))) 
"Найденные всевозможные пути T1 -> T2:" 
NIL 

"Ответ:" 

"Искомого пути не существует, вот другой путь:" 
((D F) 1 5) , где 1зн - список-маршрут, 2зн - тип пути, 3зн - длина пути

 
